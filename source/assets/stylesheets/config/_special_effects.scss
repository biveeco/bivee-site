// =============================================================================
//  Mixins and such for special effects
// =============================================================================

@import 'color';

$se-shadow-position: 0 0;
$se-shadow-blur: 0.5rem;
$se-shadow-spread: 0;
$se-shadow-color: 'shadow';
$se-shadow-opacity: 0.3;

// default shadow
@mixin se-shadow(
	$position: $se-shadow-position,
	$blur: $se-shadow-blur,
	$spread: $se-shadow-spread,
	$color: $se-shadow-color,
	$opacity: $se-shadow-opacity
) {
	// check if the $color argument is a theme color or a hex
	$color-hex: if(type-of($color) != 'color', color($color), $color);
	box-shadow: $position $blur $spread rgba($color-hex, $opacity);

	// set for each color theme
	@if type-of($color) != 'color' {
		@each $theme, $name in $themes {
			.c-theme-#{$theme} & {
				box-shadow: $position $blur $spread rgba(color($color, $theme), $opacity);
			}
		}
	}
}

@mixin se-drop-shadow(
	$position: $se-shadow-position,
	$blur: $se-shadow-blur,
	$color: $se-shadow-color,
	$opacity: $se-shadow-opacity
) {
	// check if the $color argument is a theme color or a hex
	$color-hex: if(type-of($color) != 'color', color($color), $color);
	$values: $position $blur rgba($color-hex, $opacity);

	@supports (filter: drop-shadow($values)) {
		filter: drop-shadow($values);

		// set for each color theme
		@if type-of($color) != 'color' {
			@each $theme, $name in $themes {
				.c-theme-#{$theme} & {
					filter: drop-shadow($position $blur rgba(color($color, $theme), $opacity));
				}
			}
		}
	}
}
