// =============================================================================
//  Button
//  -> brief description
// =============================================================================

@import '../config/color';
@import '../config/animation';
@import '../config/scale';
@import '../config/type';
@import '../config/borders';

$button-icon-size: 1.2em;
$button-icon-margin: ms(1, 1em);

// Block
// -----------------------------------------------------------------------------

[data-ui-button] {
  @include border-radius($size: 'large');
  @include color('text' 'primary');
  @include color-border('accent', $hover: 15, $active: -15, $focus: 15);
  @include color-background('bg', $grade: 20, $opacity: 0.2, $hover: 10, $active: -10, $focus: 10);
  @include font-display('bold');
  @include se-shadow($blur: 0, $spread: 0.0625rem, $opacity: 0.5);
  @include transition;
  background-color: transparent;
  border-width: border-width('thin');
  border-style: border-style();
  cursor: pointer;
  display: inline-block;
  font-size: scale-type('zeta');
  padding: ms(-2, 1em) ms(3, 1em);
  position: relative;
  text-shadow: none;

  &:hover {
    @include se-shadow($position: 0 0.125rem, $blur: 0.25rem);
  }

  &:active {
    box-shadow: none;
  }
}

// Elements
// -----------------------------------------------------------------------------

// use descendent selector to increase specificity, to ensure this overrides the icon component
[data-ui-button] [data-ui-button-icon] {
  $size: 1.2em;
  $position: ms(1, 1em);

  @include color('highlight');
  height: $button-icon-size;
  width: $button-icon-size;

  [data-ui-button~='icon'] & {
    margin-top: -(($button-icon-size / 2) + 0.05em);
    position: absolute;
    right: ms(1, 1em);
    top: 50%;
  }

  [data-ui-button~='icon'][data-ui-button~='left'] & {
    left: ms(1, 1em);
    right: auto;
  }
}


// Traits
// -----------------------------------------------------------------------------

// icons
[data-ui-button~='icon'] {
  $icon-space: ($button-icon-margin + $button-icon-size + 0.8em);
  padding-right: $icon-space;

  &[data-ui-button~='left'] {
    padding-left: $icon-space;
    padding-right: ms(3, 1em);
  }
}

// size
[data-ui-button~='small'] {
  font-size: scale-type('eta');
}

[data-ui-button~='large'] {
  font-size: scale-type('epsilon');
}

// role
[data-ui-button~='primary'] {
  @include color-background('accent', $hover: 6, $active: -6, $focus: 6);
  @include color-border('accent', $grade: -10, $hover: 10, $active: 0, $focus: 10);
  color: $white;

  // set the color to be white all the time
  @each $theme, $colors in $themes {
    // set color to theme of either this element or its parent
    &.c-theme-#{$theme},
    .c-theme-#{$theme} & {
      color: $white;
    }
  }
}
