// =============================================================================
//  Cover
//  -> a big splashy 'book cover' for a page of content
// =============================================================================
// sass-lint:disable no-duplicate-properties
// -> need fallback min-height props for vh units

@import '../config/borders';
@import '../config/breakpoints';
@import '../config/color';
@import '../config/spacing';

// Block
// -----------------------------------------------------------------------------

[data-ui-cover] {
  display: block;
  height: 500px;
  height: 100vh;
  position: relative;

  @supports (display: flex) {
    display: flex;
    flex-direction: column;
    justify-content: center;
  }

  // @include media('height>60em') {
  //   min-height: 60vh;
  // }

  // // for larger, wider screens, increase the height of the hero unit so the background covers the content well enough
  // // -> this is a hacky magic numbers bad solution. @jay TODO refactor
  // @include media('height>60em', '>medium') {
  //   min-height: 70vh;
  // }

  // @include media('height>60em', '>large') {
  //   min-height: 75vh;
  // }
}

// Elements
// -----------------------------------------------------------------------------

[data-ui-cover-content] {
  display: block;
  margin-top: -10rem;
  width: 100%;
}

[data-ui-cover-prompt] {
  $path-h: 6rem;

  bottom: $path-h;
  display: inline-block;
  left: 50%;
  position: absolute;
  text-align: center;
  transform: translateX(-50%);

  &::before {
    $size: 0.6rem;

    @include color-background('text' 'primary');
    border-radius: 100000px;
    bottom: ($size * -1);
    content: '';
    display: block;
    height: $size;
    left: 50%;
    position: absolute;
    transform: translateX(-50%);
    width: $size;
  }

  &::after {
    @include color-background('text' 'primary');
    bottom: ($path-h * -1);
    content: '';
    display: block;
    height: $path-h;
    left: 50%;
    position: absolute;
    transform: translateX(-50%);
    width: border-width('thin');
  }
}
