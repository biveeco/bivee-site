// =============================================================================
//  Fluid aspect ratio
// -> provides a fluid container to maintain aspect ratio when resizing
// =============================================================================

// create a modifier with width:height ratio values
// PRIVATE
@mixin _aspect-variation($w: 3, $h: 1, $use-scale: true) {
  [data-ui-aspect*='#{$w}x#{$h}'] {
    &::before {
      @if $use-scale {
        padding-top: (ms($h) / ms($w) * 100%);
      } @else {
        padding-top: ($h / $w * 100%);
      }
    }
  }
}

// Block
// -----------------------------------------------------------------------------
[data-ui-aspect] {
  position: relative;
  width: 100%;

  &::before {
    content: '';
    display: block;
  }
}

// Elements
// -----------------------------------------------------------------------------
[data-ui-aspect-content],
[data-ui-aspect] > iframe {
  height: 100%;
  left: 0;
  position: absolute;
  top: 0;
  width: 100%;
}

// force an inline child image to conform to the aspect ratio of the aspect-content container
[data-ui-aspect-image] {
  display: inline-block;
  margin: auto;
  max-height: 100%;
  max-width: 100%;
  object-fit: scale-down;
}

// change the object-fit scaling
[data-ui-aspect-image~='scale-contain'] {
  object-fit: contain;
}

[data-ui-aspect-image~='scale-cover'] {
  object-fit: cover;
}

// display a background image on the item
// -> pass in the background image inline, e.g. style="background-image: url(...);"
[data-ui-aspect-content~='bg'] {
  background-position: center;
  background-repeat: no-repeat;
  background-size: contain;

  &[data-ui-aspect-content~='scale-cover'] {
    background-size: cover;
  }

  // display the inline image as a background, to ensure it scales correctly to the aspect ratio. useful as a print and IE fallback, which doesn't support object-fit.
  &[data-ui-aspect-content~='swap'] [data-ui-aspect-image] {
    display: none;

    @media print {
      display: inline-block;
    }
  }
}

// Modifiers
// -----------------------------------------------------------------------------
@include _aspect-variation(16, 9, $use-scale: false);
@include _aspect-variation(3, 1);


