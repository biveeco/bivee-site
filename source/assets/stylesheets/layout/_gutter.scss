/* =============================================================================
// Global spacing
// -> used to keep whitespace in the layout consistent
// ========================================================================== */

@import "../core/libs";

// standard spacing for margins and padding, etc.
$gutters: (
    'narrow'     : scale-type('eta'),
    'default'    : scale-type('epsilon'),
    'wide'       : scale-type('cappa'),
    'extra_wide' : scale-type('alpha')
);

$gutter-outside: map-get($gutters, 'wide');

$gutter-sides: left right top bottom;

@function gutter($size: 'default') {
    @return map-get($gutters, $size);
}
// add wide gutters (on either side) to a given container width
@function add_outside_gutters($w) {
    @return ($w + (gutter('wide') * 2));
}


/* Utilities
// -------------------------------------------------------------------------- */

/* --- margin/padding classes ----------------------------------------------- */
// Create a bunch of utility classes for margins and padding
// -> e.g. "l-margin", "l-margin-right", "l-padding@small", "l-no-padding"
@each $prop in margin, padding {
  .l-#{$prop} { @include rem(#{$prop}, gutter() !important); }

  @each $name, $length in $gutters {
    @if $name != 'default' {
      .l-#{$prop}-#{$name} { @include rem(#{$prop}, gutter($name) !important); }
    }
  }

  @each $side in top, right, bottom, left {
    .l-#{$prop}-#{$side} { @include rem(#{$prop}-#{$side}, gutter() !important); }

    .l-no-#{$prop} { @include rem(#{$prop}, 0 !important); }

    @each $name, $length in $gutters {
      @if $name != 'default' {
        .l-#{$prop}-#{$side}-#{$name} { @include rem(#{$prop}-#{$side}, gutter($name) !important); }

        .l-no-#{$prop}-#{$side} { @include rem(#{$prop}-#{$side}, 0 !important); }

      }
    }
  }
}
