<%
	# Fluid aspect ratio container
	# -> constrain content (image, video, etc.) to a certain aspect ratio but allow it to scale fluidly inside its parent

	# Locals:
	# STRING source: if you want to use an image, pass in a path
	sizes ||= [] # ARRAY (optional): array of sizes if the image is responsive
	alt ||= "" # STRING (optional): alt tag if you"re using an image
	ratio ||= "3x1" # STRING (optional): the aspect ratio
	bg_size ||= "contain" # STRING (optional): how the image is scaled in the container.
			# -> default is "contain", which scales the whole image to fit
			# -> "cover" will stretch the image to cover the whole frame in either direction
	align ||= "center"
	fill ||= false # BOOLEAN (optional): should the image fill its container if it"s taller than the aspect ratio? (use with bg_size = "cover")
	classes ||= "" # STRING (optional): list of additional util classes, if needed

	# list of props to pass to the data-ui attributes
	props = [
		("scale-#{bg_size}" unless bg_size == "contain")
	]
%>

<div data-ui-aspect="<%= ratio %><%= " fill" if fill %>">
	<div
		data-ui-aspect-content<%= props_list(props) %>
		class="<%= classes %>"
	>
		<%= component "responsive_image", locals: {
			source: source,
			sizes: sizes,
			alt: alt,
			data: { "ui-aspect-image": "scale-#{bg_size}#{" align-#{align}" unless align === "center"}" }
		} %>
	</div>
</div>
