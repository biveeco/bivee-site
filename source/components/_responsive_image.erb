<%
  # Responsive image
  # -> use srcset to create an image that scales with screen size

  # Locals:
  # source - STRING/HASH: the path(s) or url(s) of the image files(s)
  #path ||= '' # STRING (optional): the path to the source images, if not included in source
  sizes ||= [] # Array of numbers (optional): the size variations of the image available, e.g. 400, 800, 1200 etc. Must be pixels; do not include units.
  alt ||= '' # STRING (optional): alt tag
  borders ||= false # BOOLEAN (optional): add a border to the image
  classes ||= false # STRING (optional): additional classes you'd like to pass in
  style ||= false # STRING (optional): inline styles
  data ||= false # HASH (optional): additional data attributes

  # Private:

  def path_template(path, size)
    return path.gsub('{size}', size.to_s)
  end

  def default_source(path, sizes)
    if (sizes.length > 0)
      return path_template(path, sizes[0])
    end
    return path
  end

  def source_set(path, sizes)
    if (sizes.length > 0)
      return sizes.collect do |size|
        "#{asset_url(path_template(path, size))} #{size}w"
      end.compact.join(', ').rstrip
    end

    # return false
  end

  def data_attr(attrs)
    attrs.collect do |attr, value|
      ["data-#{attr}='#{value}'"]
    end.join(' ')
  end

  utils = [
    ('border c-border-well' if borders),
    (classes if classes)
  ]
%>

<img<%= " #{data_attr(data)}" if data %><%= class_list(utils) %><%= " style='#{style}'" if style %> src="<%= default_source(source, sizes) %>"<%= " srcset='#{source_set(source, sizes)}'" if source_set(source, sizes) %> alt="<%= alt %>">
